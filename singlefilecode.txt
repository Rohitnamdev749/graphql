import { ApolloServer , gql} from "apollo-server";
import {ApolloServerPluginLandingPageGraphQLPlayground} from "apollo-server-core";
import {users , quotes} from './fakedb.js'
const typeDefs = gql`
    type Query{
        users : [User]
        user(id:ID!) : User 
        quotes : [Quote]
        userquote(by : ID!) : [Quote]
    }

type User{
    id:ID
    firstName : String
    lastName : String
    email : String
    quotes : [Quote]
}

type Quote{
    name : String
    by : ID
}
`



const resolvers = {
    Query :{
        users:()=> users,
        // when any query haven't parent so, it's first argument come undefined and in second argument come pass data
        user:(_, {id})=>users.find(user=> user.id == id),
        quotes:()=>quotes,
        userquote : (_,{by})=> quotes.filter(quote=> quote.by == by)
    },
    User : {
        // ur is a User because it's parent of quotes
        quotes:(ur)=> quotes.filter(quote=>quote.by == ur.id)
    }
}


const server = new ApolloServer({
    typeDefs,
    resolvers,
    plugins:[
        ApolloServerPluginLandingPageGraphQLPlayground()
    ]
})

server.listen().then(({url})=>{
    console.log("server ready for launch",url)
})